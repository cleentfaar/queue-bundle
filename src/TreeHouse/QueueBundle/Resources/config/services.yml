parameters:
  tree_house.queue.driver.amqp.connection.class: 'AMQPConnection'
  tree_house.queue.driver.amqp.channel.class: 'AMQPChannel'
  tree_house.queue.driver.amqp.exchange.class: 'AMQPExchange'
  tree_house.queue.driver.amqp.queue.class: 'AMQPQueue'
  tree_house.queue.driver.amqp.provider.class: 'TreeHouse\Queue\Message\Provider\AmqpMessageProvider'
  tree_house.queue.driver.amqp.publisher.class: 'TreeHouse\Queue\Message\Publisher\AmqpMessagePublisher'
  tree_house.queue.driver.amqp.factory.class: 'TreeHouse\Queue\Factory\AmqpFactory'
  tree_house.queue.composer.default.class: 'TreeHouse\Queue\Message\Composer\DefaultMessageComposer'

services:
  tree_house.queue.consumer.prototype:
    public: false
    abstract: true
    class: 'TreeHouse\Queue\Consumer'

  tree_house.queue.driver.amqp.factory:
    public: false
    class: 'TreeHouse\Queue\Factory\AmqpFactory'

  tree_house.queue.serializer.php:
    public: false
    class: 'TreeHouse\Queue\Message\Serializer\PhpSerializer'

  tree_house.queue.serializer.json:
    public: false
    class: 'TreeHouse\Queue\Message\Serializer\JsonSerializer'

  tree_house.queue.serializer.doctrine:
    public: false
    class: 'TreeHouse\Queue\Message\Serializer\DoctrineSerializer'
    arguments:
      - '@doctrine'

  tree_house.queue.event_listener.queue:
    public: true
    class: 'TreeHouse\QueueBundle\EventListener\FlushListener'
    tags:
      - { name: 'kernel.event_listener', event: 'queue.flush', method: 'onFlush' }

  tree_house.queue.flusher.doctrine_abstract:
    abstract: true
    public: false
    class: 'TreeHouse\QueueBundle\Flusher\DoctrineFlusher'
